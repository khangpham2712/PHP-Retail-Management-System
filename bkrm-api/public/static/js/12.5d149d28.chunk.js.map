{"version":3,"sources":["../node_modules/slate-react/node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/components/string.tsx","../../src/utils/weak-maps.ts","../../src/components/leaf.tsx","../../src/utils/environment.ts","../../src/hooks/use-isomorphic-layout-effect.ts","../../src/utils/range-list.ts","../../src/components/text.tsx","../../src/hooks/use-selected.ts","../../src/components/element.tsx","../../src/hooks/use-slate-static.tsx","../../src/hooks/use-decorate.ts","../../src/hooks/use-children.tsx","../../src/utils/hotkeys.ts","../../src/hooks/use-read-only.ts","../../src/hooks/use-slate.tsx","../../src/utils/dom.ts","../../src/components/editable.tsx","../../src/utils/key.ts","../../src/plugin/react-editor.ts","../../src/components/android/diff-text.ts","../../src/components/android/restore-dom.ts","../../src/components/android/android-input-manager.ts","../../src/components/android/mutation-detection.ts","../../src/components/android/use-android-input-manager.ts","../../src/components/android/use-track-user-input.ts","../../src/components/android/use-mutation-observer.ts","../../src/hooks/use-focused.ts","../../src/components/slate.tsx","../../src/utils/lines.ts","../../src/plugin/with-react.ts","../../src/index.ts","../../src/components/android/android-editable.tsx","../node_modules/lodash/debounce.js","../node_modules/is-hotkey/lib/index.js","../../../src/components/DialogVisibleProvider.tsx","../node_modules/lodash/now.js","../node_modules/scroll-into-view-if-needed/es/index.js","../node_modules/direction/index.js","../node_modules/lodash/throttle.js"],"names":["prefix","invariant","condition","message","Error","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","source","excluded","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","String","props","isLast","leaf","parent","text","editor","useSlateStatic","path","ReactEditor","findPath","parentPath","Path","isVoid","React","createElement","ZeroWidthString","Node","string","children","isInline","Editor","slice","TextString","isTrailing","isLineBreak","_props$isTrailing","_props$length","_props$isLineBreak","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","KEY_TO_ELEMENT","NODE_TO_ELEMENT","NODE_TO_KEY","IS_READ_ONLY","IS_FOCUSED","EDITOR_TO_ON_CHANGE","EDITOR_TO_RESTORE_DOM","PLACEHOLDER_SYMBOL","Symbol","keyForString","Leaf","renderPlaceholder","_props$renderLeaf","renderLeaf","DefaultLeaf","assign","placeholderRef","useRef","useEffect","placeholderEl","current","editorEl","document","querySelector","style","minHeight","concat","clientHeight","placeholderProps","placeholder","attributes","position","pointerEvents","width","maxWidth","display","opacity","userSelect","textDecoration","contentEditable","ref","Fragment","MemoizedLeaf","memo","prev","next","Text$1","equals","IS_IOS","navigator","window","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","CAN_USE_DOM","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","getTargetRanges","useIsomorphicLayoutEffect","useLayoutEffect","shallowCompare","obj1","obj2","every","hasOwnProperty","isDecoratorRangeListEqual","list","another","range","other","rangeOwnProps","otherOwnProps","Range","Text","decorations","leaves","findKey","push","id","set","delete","MemoizedText","SelectedContext","createContext","useSelected","useContext","Element","element","_props$renderElement","renderElement","p","DefaultElement","selection","readOnly","useReadOnly","useChildren","node","hasInlines","dir","getDirection","Tag","_Node$texts","texts","_Node$texts2","_slicedToArray","_text","height","color","outline","Provider","MemoizedElement","EditorContext","DecorateContext","decorate","isLeafBlock","Element$1","isElement","_step","n","sel","intersection","ds","_iterator","_createForOfIteratorHelper","s","done","dec","d","err","e","f","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","Hotkeys","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","getDefaultView","ownerDocument","defaultView","isDOMElement","isDOMNode","nodeType","isDOMSelection","anchorNode","Selection","isDOMText","getEditableChildAndIndex","index","direction","childNodes","child","triedForward","triedBackward","getAttribute","getEditableChild","_getEditableChildAndI3","getPlainText","domNode","nodeValue","_i","_Array$from","Array","from","getComputedStyle","getPropertyValue","tagName","Children","DefaultPlaceholder","_ref","defaultDecorate","defaultScrollSelectionIntoView","domRange","leafEl","startContainer","parentElement","getBoundingClientRect","bind","scrollIntoView","scrollMode","hasTarget","hasDOMNode","hasEditableTarget","editable","isTargetInsideVoid","slateNode","toSlateNode","isEventHandled","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","isDOMEventHandled","defaultPrevented","Key","_classCallCheck","this","getWindow","get","isEditor","unshift","JSON","stringify","findDocumentOrShadowRoot","el","toDOMNode","root","getRootNode","Document","ShadowRoot","getSelection","isFocused","isReadOnly","blur","activeElement","focus","preventScroll","deselect","domSelection","rangeCount","removeAllRanges","Transforms","targetEl","options","arguments","undefined","_options$editable","includes","closest","isContentEditable","insertData","data","setFragmentData","toDOMPoint","point","domPoint","_Editor$node","void","at","offset","start","_i2","_texts","querySelectorAll","textContent","attr","end","parseInt","Math","min","max","toDOMRange","anchor","isBackward","domAnchor","domFocus","isCollapsed","createRange","_ref8","_ref9","startNode","startOffset","_ref10","_ref11","endNode","endOffset","isStartAtZeroWidth","isEndAtZeroWidth","setStart","setEnd","domEl","hasAttribute","findEventRange","nativeEvent","_event","x","clientX","y","clientY","rect","isPrev","left","top","edge","before","after","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlateRange","exactMatch","toSlatePoint","_ref12","_domPoint","_getEditableChildAndI","_getEditableChildAndI2","normalizeDOMPoint","_ref13","nearestNode","nearestOffset","parentNode","textNode","voidNode","leafNode","contents","cloneContents","_toConsumableArray","forEach","removeChild","anchorOffset","focusNode","focusOffset","shadowRoot","endContainer","collapsed","hasRange","hasPath","getDiffOffsets","charAt","getDiffStart","prevLength","nextLength","getDiffEnd","sliceText","offsets","getTextInsertion","isText","prevText","nextText","endsWith","textDiff","insertText","removeText","diffText","normalizeTextInsertionRange","_ref2","insertionRange","_Array$from2","nodes","match","characterBeforeAnchor","characterAfterAnchor","restoreDOM","onRestoreDOM","console","error","AndroidInputManager","_this","flush","mutations","reconcileMutations","mutationData","addedNodes","removedNodes","insertedText","characterDataMutations","mutation","type","addedNode","removedNode","textInsertion","some","gatherMutationData","_ref4","_ref5","isExpanded","isReplaceExpandedSelection","reduce","acc","combineInsertedText","replaceExpandedSelection","parentDOMNode","HTMLElement","_","_ref7","isRemoveLeafNodes","removeLeafNodes","insertBreak","insertion","setTimeout","move","deleteFragment","_step2","_iterator2","MUTATION_OBSERVER_CONFIG","childList","characterData","characterDataOldValue","subtree","useAndroidInputManager","_useState5","useState","inputManager","_useTrackUserInput","receivedUserInput","animationFrameRef","onUserInput","useCallback","cancelAnimationFrame","requestAnimationFrame","useTrackUserInput","timeoutId","isReconciling","callback","_useState3","MutationObserver","mutationObserver","disconnect","observe","useMutationObserver","clearTimeout","FocusedContext","useFocused","Slate","onChange","rest","_useState9","_useState10","setKey","useMemo","isNodeList","values","onContextChange","_useState11","_useState12","setIsFocused","fn","addEventListener","removeEventListener","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","withReact","apply","unit","parentBlockEntry","above","isBlock","parentBlockPath","parentElementRange","currentLineRange","parentRange","parentRangeBoundary","positions","right","floor","findCurrentLineRange","op","matches","_step3","_iterator3","levels","_step3$value","_step4","_iterator4","_step4$value","_node","_path","_key","_step5","_iterator5","common","newPath","_step5$value","_node2","_path2","_key2","_i3","_matches","_matches$_i","_path3","_key3","_Editor$node3","_node3","_Range$edges","edges","_Range$edges2","startVoid","endVoid","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","whiteSpace","appendChild","fragment","getFragment","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","innerHTML","getData","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","_step6","lines","split","_iterator6","line","splitNodes","always","ReactDOM","unstable_batchedUpdates","Editable$1","autoFocus","_props$decorate2","propsOnDOMBeforeInput","onDOMBeforeInput","_props$readOnly2","_props$renderPlacehol2","_props$style2","_props$as2","as","Component","state","isUpdatingSelection","latestElement","_useState7","_useState8","contentKey","setContentKey","hasDomSelection","editorElement","hasDomSelectionInEditor","contains","slateRange","newDomRange","setBaseAndExtent","boundary","_unused","onDOMSelectionChange","throttle","anchorNodeSelectable","focusNodeSelectable","select","_unused2","_decorations$push2","_defineProperty2","role","spellCheck","autoCorrect","autoCapitalize","suppressContentEditableWarning","_objectSpread$1","wordWrap","onCopy","preventDefault","clipboardData","onCut","onFocus","onBlur","relatedTarget","onPaste","_props$decorate","_props$readOnly","_props$renderPlacehol","_props$scrollSelectio","scrollSelectionIntoView","_props$style","_props$as","_useState","_useState2","isComposing","setIsComposing","isDraggingInternally","inputType","dataTransfer","startsWith","_event$getTargetRange","targetRange","DataTransfer","_decorations$push","_objectSpread","onBeforeInput","onClick","_start","onCompositionEnd","onCompositionUpdate","onCompositionStart","onDragOver","onDragStart","voids","onDrop","draggedRange","onDragEnd","onKeyDown","isRTL","maybeHistoryEditor","_maybeHistoryEditor","reverse","collapse","currentNode","types","isPlainTextOnlyPaste","t","scrollHeight","clientWidth","scrollWidth","overflowY","overflowX","frameElement","o","l","block","u","inline","h","a","skipOverflowHiddenElements","c","TypeError","scrollingElement","documentElement","m","visualViewport","innerWidth","g","innerHeight","w","scrollX","pageXOffset","v","scrollY","pageYOffset","W","b","H","E","M","V","I","C","T","k","B","D","O","R","X","Y","L","S","j","borderLeftWidth","q","borderTopWidth","z","borderRightWidth","A","borderBottomWidth","F","G","J","offsetWidth","K","offsetHeight","N","scrollLeft","P","scrollTop","isObject","require","now","toNumber","nativeMax","nativeMin","module","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","IS_MAC","platform","MODIFIERS","alt","control","meta","shift","ALIASES","add","break","cmd","command","ctl","ctrl","del","down","esc","ins","mod","opt","option","return","space","spacebar","up","win","CODES","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","isHotkey","hotkey","isArray","array","map","parseHotkey","check","object","compareHotkey","byKey","ret","replace","_iteratorNormalCompletion","_didIteratorError","_iteratorError","iterator","optional","name","toKeyName","modifier","which","toKeyCode","expected","actual","toLowerCase","toUpperCase","charCodeAt","default","isCodeHotkey","DialogContext","useDialogIsVisible","_a","visible","useSetDialogIsVisible","setVisible","DialogVisibleProvider","_b","__read","Date","isOptionsObject","isTargetAttached","isConnected","behavior","compute","computeOptions","getOptions","actions","canSmoothScroll","scroll","defaultBehavior","rtl","ltr","RTL","LTR","RegExp","debounce"],"mappings":"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","file":"static/js/12.5d149d28.chunk.js","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\n\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  return (\n    <span data-slate-string>\n      {text}\n      {isTrailing ? '\\n' : null}\n    </span>\n  )\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Node, Ancestor, Editor, Range } from 'slate'\n\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const KEY_TO_ELEMENT: WeakMap<Key, HTMLElement> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\nexport const EDITOR_TO_RESTORE_DOM = new WeakMap<Editor, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\n\n// auto-incrementing key for String component, force it refresh to\n// prevent inconsistent rendering by React with IME input\nlet keyForString = 0\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n    const editorEl = document.querySelector<HTMLDivElement>(\n      '[data-slate-editor=\"true\"]'\n    )\n\n    if (!placeholderEl || !editorEl) {\n      return\n    }\n\n    editorEl.style.minHeight = `${placeholderEl.clientHeight}px`\n\n    return () => {\n      editorEl.style.minHeight = 'auto'\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String\n      key={keyForString++}\n      isLast={isLast}\n      leaf={leaf}\n      parent={parent}\n      text={text}\n    />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","export const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(\n    navigator.userAgent\n  )\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  KEY_TO_ELEMENT,\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  return (\n    <span data-slate-node=\"text\" ref={ref}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React, { useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, NodeEntry, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport { SelectedContext } from '../hooks/use-selected'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = readOnly ? null : (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  return (\n    <SelectedContext.Provider value={!!selection}>\n      {renderElement({ attributes, children, element })}\n    </SelectedContext.Provider>\n  )\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import React from 'react'\nimport { Editor, Range, Element, NodeEntry, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '..'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <ElementComponent\n          decorations={ds}\n          element={n}\n          key={key.id}\n          renderElement={renderElement}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          selection={sel}\n        />\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <SlateProvider> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = () => {\n  return !!(\n    window.document.activeElement && window.document.activeElement.shadowRoot\n  )\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n","import React, { useEffect, useRef, useMemo, useCallback, useState } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n  Path,\n} from 'slate'\nimport getDirection from 'direction'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport useChildren from '../hooks/use-children'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_IOS,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_SAFARI,\n} from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\n\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_WINDOW,\n} from '../utils/weak-maps'\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    // verify that the dom selection is in the editor\n    const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n    let hasDomSelectionInEditor = false\n    if (\n      editorElement.contains(domSelection.anchorNode) &&\n      editorElement.contains(domSelection.focusNode)\n    ) {\n      hasDomSelectionInEditor = true\n    }\n\n    // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n    if (hasDomSelection && hasDomSelectionInEditor && selection) {\n      const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: true,\n      })\n      if (slateRange && Range.equals(slateRange, selection)) {\n        return\n      }\n    }\n\n    // when <Editable/> is being controlled through external value\n    // then its children might just change - DOM responds to it on its own\n    // but Slate's value is not being updated through any operation\n    // and thus it doesn't transform selection on its own\n    if (selection && !ReactEditor.hasRange(editor, selection)) {\n      editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n      })\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    state.isUpdatingSelection = true\n\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n    if (newDomRange) {\n      if (Range.isBackward(selection!)) {\n        domSelection.setBaseAndExtent(\n          newDomRange.endContainer,\n          newDomRange.endOffset,\n          newDomRange.startContainer,\n          newDomRange.startOffset\n        )\n      } else {\n        domSelection.setBaseAndExtent(\n          newDomRange.startContainer,\n          newDomRange.startOffset,\n          newDomRange.endContainer,\n          newDomRange.endOffset\n        )\n      }\n      scrollSelectionIntoView(editor, newDomRange)\n    } else {\n      domSelection.removeAllRanges()\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        el.focus()\n      }\n\n      state.isUpdatingSelection = false\n    })\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        event.preventDefault()\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              Transforms.select(editor, range)\n            }\n          }\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              state.isComposing && setIsComposing(false)\n              state.isComposing = false\n            }\n\n            const window = ReactEditor.getWindow(editor)\n            if (data instanceof window.DataTransfer) {\n              ReactEditor.insertData(editor, data as DataTransfer)\n            } else if (typeof data === 'string') {\n              Editor.insertText(editor, data)\n            }\n\n            break\n          }\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        !readOnly &&\n        !state.isComposing &&\n        !state.isUpdatingSelection &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n          })\n          Transforms.select(editor, range)\n        } else {\n          Transforms.deselect(editor)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        onDOMSelectionChange\n      )\n    }\n  }, [onDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          // COMPAT: The Grammarly Chrome extension works by changing the DOM\n          // out from under `contenteditable` elements, which leads to weird\n          // behaviors so we have to disable it like editor. (2017/04/24)\n          data-gramm={false}\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n          // have to use hacks to make these replacement-based features work.\n          spellCheck={!HAS_BEFORE_INPUT_SUPPORT ? false : attributes.spellCheck}\n          autoCorrect={\n            !HAS_BEFORE_INPUT_SUPPORT ? 'false' : attributes.autoCorrect\n          }\n          autoCapitalize={\n            !HAS_BEFORE_INPUT_SUPPORT ? 'false' : attributes.autoCapitalize\n          }\n          data-slate-editor\n          data-slate-node=\"value\"\n          contentEditable={readOnly ? undefined : true}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onBeforeInput={useCallback(\n            (event: React.FormEvent<HTMLDivElement>) => {\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n              // fall back to React's leaky polyfill instead just for it. It\n              // only works for the `insertText` input type.\n              if (\n                !HAS_BEFORE_INPUT_SUPPORT &&\n                !readOnly &&\n                !isEventHandled(event, attributes.onBeforeInput) &&\n                hasEditableTarget(editor, event.target)\n              ) {\n                event.preventDefault()\n                if (!state.isComposing) {\n                  const text = (event as any).data as string\n                  Editor.insertText(editor, text)\n                }\n              }\n            },\n            [readOnly]\n          )}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              // COMPAT: Safari doesn't always remove the selection even if the content-\n              // editable element no longer has focus. Refer to:\n              // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n              if (IS_SAFARI) {\n                const domSelection = root.getSelection()\n                domSelection?.removeAllRanges()\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n                const start = Editor.start(editor, path)\n                const end = Editor.end(editor, path)\n\n                const startVoid = Editor.void(editor, { at: start })\n                const endVoid = Editor.void(editor, { at: end })\n\n                if (\n                  startVoid &&\n                  endVoid &&\n                  Path.equals(startVoid[1], endVoid[1])\n                ) {\n                  const range = Editor.range(editor, start)\n                  Transforms.select(editor, range)\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                state.isComposing && setIsComposing(false)\n                state.isComposing = false\n\n                // COMPAT: In Chrome, `beforeinput` events for compositions\n                // aren't correct and never fire the \"insertFromComposition\"\n                // type that we need. So instead, insert whenever a composition\n                // ends since it will already have been committed to the DOM.\n                if (!IS_SAFARI && !IS_FIREFOX_LEGACY && !IS_IOS && event.data) {\n                  Editor.insertText(editor, event.data)\n                }\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                const { selection } = editor\n                if (selection && Range.isExpanded(selection)) {\n                  Editor.deleteFragment(editor)\n                }\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData)\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData)\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onDragOver={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragOver)\n              ) {\n                // Only when the target is void, call `preventDefault` to signal\n                // that drops are allowed. Editable content is droppable by\n                // default, and calling `preventDefault` hides the cursor.\n                const node = ReactEditor.toSlateNode(editor, event.target)\n\n                if (Editor.isVoid(editor, node)) {\n                  event.preventDefault()\n                }\n              }\n            },\n            [attributes.onDragOver]\n          )}\n          onDragStart={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragStart)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n                const voidMatch =\n                  Editor.isVoid(editor, node) ||\n                  Editor.void(editor, { at: path, voids: true })\n\n                // If starting a drag on a void node, make sure it is selected\n                // so that it shows up in the selection's fragment.\n                if (voidMatch) {\n                  const range = Editor.range(editor, path)\n                  Transforms.select(editor, range)\n                }\n\n                state.isDraggingInternally = true\n\n                ReactEditor.setFragmentData(editor, event.dataTransfer)\n              }\n            },\n            [attributes.onDragStart]\n          )}\n          onDrop={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDrop)\n              ) {\n                event.preventDefault()\n\n                // Keep a reference to the dragged range before updating selection\n                const draggedRange = editor.selection\n\n                // Find the range where the drop happened\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n\n                Transforms.select(editor, range)\n\n                if (state.isDraggingInternally) {\n                  if (draggedRange) {\n                    Transforms.delete(editor, {\n                      at: draggedRange,\n                    })\n                  }\n\n                  state.isDraggingInternally = false\n                }\n\n                ReactEditor.insertData(editor, data)\n\n                // When dragging from another source into the editor, it's possible\n                // that the current editor does not have focus.\n                if (!ReactEditor.isFocused(editor)) {\n                  ReactEditor.focus(editor)\n                }\n              }\n            },\n            [readOnly, attributes.onDrop]\n          )}\n          onDragEnd={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              // When dropping on a different droppable element than the current editor,\n              // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n              // Note: `onDragEnd` is only called when `onDrop` is not called\n              if (\n                !readOnly &&\n                state.isDraggingInternally &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragEnd)\n              ) {\n                state.isDraggingInternally = false\n              }\n            },\n            [readOnly, attributes.onDragEnd]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const el = ReactEditor.toDOMNode(editor, editor)\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                // COMPAT: If the editor has nested editable elements, the focus\n                // can go to them. In Firefox, this must be prevented because it\n                // results in issues with keyboard navigation. (2017/03/30)\n                if (IS_FIREFOX && event.target !== el) {\n                  el.focus()\n                  return\n                }\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onKeyDown={useCallback(\n            (event: React.KeyboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onKeyDown)\n              ) {\n                const { nativeEvent } = event\n                const { selection } = editor\n\n                const element =\n                  editor.children[\n                    selection !== null ? selection.focus.path[0] : 0\n                  ]\n                const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                // COMPAT: Since we prevent the default behavior on\n                // `beforeinput` events, the browser doesn't think there's ever\n                // any history stack to undo or redo, so we have to manage these\n                // hotkeys ourselves. (2019/11/06)\n                if (Hotkeys.isRedo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.redo === 'function') {\n                    maybeHistoryEditor.redo()\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isUndo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.undo === 'function') {\n                    maybeHistoryEditor.undo()\n                  }\n\n                  return\n                }\n\n                // COMPAT: Certain browsers don't handle the selection updates\n                // properly. In Chrome, the selection isn't properly extended.\n                // And in Firefox, the selection isn't properly collapsed.\n                // (2017/10/17)\n                if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', reverse: true })\n                  return\n                }\n\n                if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line' })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, {\n                    unit: 'line',\n                    edge: 'focus',\n                    reverse: true,\n                  })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                  return\n                }\n\n                // COMPAT: If a void node is selected, or a zero-width text node\n                // adjacent to an inline is selected, we need to handle these\n                // hotkeys manually because browsers won't be able to skip over\n                // the void node with the zero-width space not being an empty\n                // string.\n                if (Hotkeys.isMoveBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: !isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'start' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'end' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                  return\n                }\n\n                if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                  return\n                }\n\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to guessing at the input intention for hotkeys.\n                // COMPAT: In iOS, some of these hotkeys are handled in the\n                if (!HAS_BEFORE_INPUT_SUPPORT) {\n                  // We don't have a core behavior for these, but they change the\n                  // DOM if we don't prevent them, so we have to.\n                  if (\n                    Hotkeys.isBold(nativeEvent) ||\n                    Hotkeys.isItalic(nativeEvent) ||\n                    Hotkeys.isTransposeCharacter(nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    return\n                  }\n\n                  if (Hotkeys.isSplitBlock(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n                } else {\n                  if (IS_CHROME || IS_SAFARI) {\n                    // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                    // an event when deleting backwards in a selected void inline node\n                    if (\n                      selection &&\n                      (Hotkeys.isDeleteBackward(nativeEvent) ||\n                        Hotkeys.isDeleteForward(nativeEvent)) &&\n                      Range.isCollapsed(selection)\n                    ) {\n                      const currentNode = Node.parent(\n                        editor,\n                        selection.anchor.path\n                      )\n\n                      if (\n                        Element.isElement(currentNode) &&\n                        Editor.isVoid(editor, currentNode) &&\n                        Editor.isInline(editor, currentNode)\n                      ) {\n                        event.preventDefault()\n                        Transforms.delete(editor, { unit: 'block' })\n\n                        return\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onKeyDown]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste)\n              ) {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's `onPaste` here instead.\n                // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT ||\n                  isPlainTextOnlyPaste(event.nativeEvent)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.insertData(editor, event.clipboardData)\n                }\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          <Children\n            decorations={decorations}\n            node={editor}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={editor.selection}\n          />\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => <span {...attributes}>{children}</span>\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  const leafEl = domRange.startContainer.parentElement!\n  leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n  scrollIntoView(leafEl, {\n    scrollMode: 'if-needed',\n  })\n  delete leafEl.getBoundingClientRect\n}\n\n/**\n * Check if two DOM range objects are equal.\n */\n\nexport const isRangeEqual = (a: DOMRange, b: DOMRange) => {\n  return (\n    (a.startContainer === b.startContainer &&\n      a.startOffset === b.startOffset &&\n      a.endContainer === b.endContainer &&\n      a.endOffset === b.endOffset) ||\n    (a.startContainer === b.endContainer &&\n      a.startOffset === b.endOffset &&\n      a.endContainer === b.startContainer &&\n      a.endOffset === b.startOffset)\n  )\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nexport const hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in the editor.\n */\n\nexport const isTargetInsideVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms, BaseEditor } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  KEY_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  normalizeDOMPoint,\n  hasShadowRoot,\n} from '../utils/dom'\nimport { IS_CHROME } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  setFragmentData: (data: DataTransfer) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n}\n\nexport const ReactEditor = {\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable ||\n        targetEl.isContentEditable ||\n        !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(editor: ReactEditor, data: DataTransfer): void {\n    editor.setFragmentData(data)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = window\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    exactMatch: T\n  ): T extends true ? Point | null : Point {\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const voidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        const window = ReactEditor.getWindow(editor)\n        const range = window.document.createRange()\n        range.setStart(textNode, 0)\n        range.setEnd(nearestNode, nearestOffset)\n        const contents = range.cloneContents()\n        const removals = [\n          ...Array.prototype.slice.call(\n            contents.querySelectorAll('[data-slate-zero-width]')\n          ),\n          ...Array.prototype.slice.call(\n            contents.querySelectorAll('[contenteditable=false]')\n          ),\n        ]\n\n        removals.forEach(el => {\n          el!.parentNode!.removeChild(el)\n        })\n\n        // COMPAT: Edge has a bug where Range.prototype.toString() will\n        // convert \\n into \\r\\n. The bug causes a loop when slate-react\n        // attempts to reposition its cursor to match the native position. Use\n        // textContent.length instead.\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n        offset = contents.textContent!.length\n        domNode = textNode\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      // COMPAT: If the parent node is a Slate zero-width space, editor is\n      // because the text node should have no characters. However, during IME\n      // composition the ASCII characters will be prepended to the zero-width\n      // space, so subtract 1 from the offset to account for the zero-width\n      // space character.\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        parentNode.hasAttribute('data-slate-zero-width')\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      if (exactMatch) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      exactMatch\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], exactMatch)\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    return ({ anchor, focus } as unknown) as T extends true\n      ? Range | null\n      : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n}\n","import { Editor, Path, Range, Text } from 'slate'\n\nimport { ReactEditor } from '../../'\nimport { DOMNode } from '../../utils/dom'\n\nexport type Diff = {\n  start: number\n  end: number\n  insertText: string\n  removeText: string\n}\n\nexport interface TextInsertion {\n  text: Diff\n  path: Path\n}\n\ntype TextRange = {\n  start: number\n  end: number\n}\n\n/**\n * Returns the number of characters that are the same at the beginning of the\n * String.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the offset of the start of the difference; null if there is no difference\n */\nfunction getDiffStart(prev: string, next: string): number | null {\n  const length = Math.min(prev.length, next.length)\n\n  for (let i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Returns the number of characters that are the same at the end of the String\n * up to `max`. Max prevents double-counting characters when there are\n * multiple duplicate characters around the diff area.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @param max  the max length to test.\n * @returns number of characters that are the same at the end of the string\n */\nfunction getDiffEnd(prev: string, next: string, max: number): number | null {\n  const prevLength = prev.length\n  const nextLength = next.length\n  const length = Math.min(prevLength, nextLength, max)\n\n  for (let i = 0; i < length; i++) {\n    const prevChar = prev.charAt(prevLength - i - 1)\n    const nextChar = next.charAt(nextLength - i - 1)\n    if (prevChar !== nextChar) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Takes two strings and returns an object representing two offsets. The\n * first, `start` represents the number of characters that are the same at\n * the front of the String. The `end` represents the number of characters\n * that are the same at the end of the String.\n *\n * Returns null if they are identical.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the difference text range; null if there are no differences.\n */\nfunction getDiffOffsets(prev: string, next: string): TextRange | null {\n  if (prev === next) return null\n  const start = getDiffStart(prev, next)\n  if (start === null) return null\n  const maxEnd = Math.min(prev.length - start, next.length - start)\n  const end = getDiffEnd(prev, next, maxEnd)!\n  if (end === null) return null\n  return { start, end }\n}\n\n/**\n * Takes a text string and returns a slice from the string at the given text range\n *\n * @param text  the text\n * @param offsets  the text range\n * @returns the text slice at text range\n */\nfunction sliceText(text: string, offsets: TextRange): string {\n  return text.slice(offsets.start, text.length - offsets.end)\n}\n\n/**\n * Takes two strings and returns a smart diff that can be used to describe the\n * change in a way that can be used as operations like inserting, removing or\n * replacing text.\n *\n * @param prev the previous text\n * @param next the next text\n * @returns the text difference\n */\nexport function diffText(prev?: string, next?: string): Diff | null {\n  if (prev === undefined || next === undefined) return null\n  const offsets = getDiffOffsets(prev, next)\n  if (offsets == null) return null\n  const insertText = sliceText(next, offsets)\n  const removeText = sliceText(prev, offsets)\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    insertText,\n    removeText,\n  }\n}\n\nexport function combineInsertedText(insertedText: TextInsertion[]): string {\n  return insertedText.reduce((acc, { text }) => `${acc}${text.insertText}`, '')\n}\n\nexport function getTextInsertion<T extends Editor>(\n  editor: T,\n  domNode: DOMNode\n): TextInsertion | undefined {\n  const node = ReactEditor.toSlateNode(editor, domNode)\n\n  if (!Text.isText(node)) {\n    return undefined\n  }\n\n  const prevText = node.text\n  let nextText = domNode.textContent!\n\n  // textContent will pad an extra \\n when the textContent ends with an \\n\n  if (nextText.endsWith('\\n')) {\n    nextText = nextText.slice(0, nextText.length - 1)\n  }\n\n  // If the text is no different, there is no diff.\n  if (nextText !== prevText) {\n    const textDiff = diffText(prevText, nextText)\n    if (textDiff !== null) {\n      const textPath = ReactEditor.findPath(editor, node)\n\n      return {\n        text: textDiff,\n        path: textPath,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function normalizeTextInsertionRange(\n  editor: Editor,\n  range: Range | null,\n  { path, text }: TextInsertion\n) {\n  const insertionRange = {\n    anchor: { path, offset: text.start },\n    focus: { path, offset: text.end },\n  }\n\n  if (!range || !Range.isCollapsed(range)) {\n    return insertionRange\n  }\n\n  const { insertText, removeText } = text\n  const isSingleCharacterInsertion =\n    insertText.length === 1 || removeText.length === 1\n\n  /**\n   * This code handles edge cases that arise from text diffing when the\n   * inserted or removed character is a single character, and the character\n   * right before or after the anchor is the same as the one being inserted or\n   * removed.\n   *\n   * Take this example: hello|o\n   *\n   * If another `o` is inserted at the selection's anchor in the example above,\n   * it should be inserted at the anchor, but using text diffing, we actually\n   * detect that the character was inserted after the second `o`:\n   *\n   * helloo[o]|\n   *\n   * Instead, in these very specific edge cases, we assume that the character\n   * needs to be inserted after the anchor rather than where the diff was found:\n   *\n   * hello[o]|o\n   */\n  if (isSingleCharacterInsertion && Path.equals(range.anchor.path, path)) {\n    const [text] = Array.from(\n      Editor.nodes(editor, { at: range, match: Text.isText })\n    )\n\n    if (text) {\n      const [node] = text\n      const { anchor } = range\n      const characterBeforeAnchor = node.text[anchor.offset - 1]\n      const characterAfterAnchor = node.text[anchor.offset]\n\n      if (insertText.length === 1 && insertText === characterAfterAnchor) {\n        // Assume text should be inserted at the anchor\n        return range\n      }\n\n      if (removeText.length === 1 && removeText === characterBeforeAnchor) {\n        // Assume text should be removed right before the anchor\n        return {\n          anchor: { path, offset: anchor.offset - 1 },\n          focus: { path, offset: anchor.offset },\n        }\n      }\n    }\n  }\n\n  return insertionRange\n}\n","import { ReactEditor } from '../..'\nimport { EDITOR_TO_RESTORE_DOM } from '../../utils/weak-maps'\n\nexport function restoreDOM(editor: ReactEditor) {\n  try {\n    const onRestoreDOM = EDITOR_TO_RESTORE_DOM.get(editor)\n    if (onRestoreDOM) {\n      onRestoreDOM()\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n","import { ReactEditor } from '../../plugin/react-editor'\nimport { Editor, Range, Transforms } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\n\nimport {\n  normalizeTextInsertionRange,\n  combineInsertedText,\n  TextInsertion,\n} from './diff-text'\nimport {\n  gatherMutationData,\n  isDeletion,\n  isLineBreak,\n  isRemoveLeafNodes,\n  isReplaceExpandedSelection,\n  isTextInsertion,\n} from './mutation-detection'\nimport { restoreDOM } from './restore-dom'\n\n// Replace with `const debug = console.log` to debug\nconst debug = (...message: any[]) => {}\n\n/**\n * Based loosely on:\n *\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\n *\n * The input manager attempts to map observed mutations on the document to a\n * set of operations in order to reconcile Slate's internal value with the DOM.\n *\n * Mutations are processed synchronously as they come in. Only mutations that occur\n * during a user input loop are processed, as other mutations can occur within the\n * document that were not initiated by user input.\n *\n * The mutation reconciliation process attempts to match mutations to the following\n * patterns:\n *\n * - Text updates\n * - Deletions\n * - Line breaks\n *\n * @param editor\n */\n\nexport class AndroidInputManager {\n  constructor(private editor: ReactEditor) {\n    this.editor = editor\n  }\n\n  /**\n   * Handle MutationObserver flush\n   *\n   * @param mutations\n   */\n\n  flush = (mutations: MutationRecord[]) => {\n    debug('flush')\n\n    try {\n      this.reconcileMutations(mutations)\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err)\n\n      // Failed to reconcile mutations, restore DOM to its previous state\n      restoreDOM(this.editor)\n    }\n  }\n\n  /**\n   * Reconcile a batch of mutations\n   *\n   * @param mutations\n   */\n\n  private reconcileMutations = (mutations: MutationRecord[]) => {\n    const mutationData = gatherMutationData(this.editor, mutations)\n    const { insertedText, removedNodes } = mutationData\n\n    debug('processMutations', mutations, mutationData)\n\n    if (isReplaceExpandedSelection(this.editor, mutationData)) {\n      const text = combineInsertedText(insertedText)\n      this.replaceExpandedSelection(text)\n    } else if (isLineBreak(this.editor, mutationData)) {\n      this.insertBreak()\n    } else if (isRemoveLeafNodes(this.editor, mutationData)) {\n      this.removeLeafNodes(removedNodes)\n    } else if (isDeletion(this.editor, mutationData)) {\n      this.deleteBackward()\n    } else if (isTextInsertion(this.editor, mutationData)) {\n      this.insertText(insertedText)\n    }\n  }\n\n  /**\n   * Apply text diff\n   */\n\n  private insertText = (insertedText: TextInsertion[]) => {\n    debug('insertText')\n\n    const { selection } = this.editor\n\n    // Insert the batched text diffs\n    insertedText.forEach(insertion => {\n      Transforms.insertText(this.editor, insertion.text.insertText, {\n        at: normalizeTextInsertionRange(this.editor, selection, insertion),\n      })\n    })\n  }\n\n  /**\n   * Handle line breaks\n   */\n\n  private insertBreak = () => {\n    debug('insertBreak')\n\n    const { selection } = this.editor\n\n    Editor.insertBreak(this.editor)\n\n    // To-do: Need a more granular solution to restoring only a specific portion\n    // of the document. Restoring the entire document is expensive.\n    restoreDOM(this.editor)\n\n    if (selection) {\n      // Compat: Move selection to the newly inserted block if it has not moved\n      setTimeout(() => {\n        if (\n          this.editor.selection &&\n          Range.equals(selection, this.editor.selection)\n        ) {\n          Transforms.move(this.editor)\n        }\n      }, 100)\n    }\n  }\n\n  /**\n   * Handle expanded selection being deleted or replaced by text\n   */\n\n  private replaceExpandedSelection = (text: string) => {\n    debug('replaceExpandedSelection')\n\n    // Delete expanded selection\n    Editor.deleteFragment(this.editor)\n\n    if (text.length) {\n      // Selection was replaced by text, insert the entire text diff\n      Editor.insertText(this.editor, text)\n    }\n\n    restoreDOM(this.editor)\n  }\n\n  /**\n   * Handle `backspace` that merges blocks\n   */\n\n  private deleteBackward = () => {\n    debug('deleteBackward')\n\n    Editor.deleteBackward(this.editor)\n    ReactEditor.focus(this.editor)\n\n    restoreDOM(this.editor)\n  }\n\n  /**\n   * Handle mutations that remove specific leaves\n   */\n  private removeLeafNodes = (nodes: DOMNode[]) => {\n    for (const node of nodes) {\n      const slateNode = ReactEditor.toSlateNode(this.editor, node)\n\n      if (slateNode) {\n        const path = ReactEditor.findPath(this.editor, slateNode)\n\n        Transforms.delete(this.editor, { at: path })\n        restoreDOM(this.editor)\n      }\n    }\n  }\n}\n\nexport default AndroidInputManager\n","import { Editor, Node, Path, Range } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\nimport { ReactEditor } from '../..'\nimport { TextInsertion, getTextInsertion } from './diff-text'\n\ninterface MutationData {\n  addedNodes: DOMNode[]\n  removedNodes: DOMNode[]\n  insertedText: TextInsertion[]\n  characterDataMutations: MutationRecord[]\n}\n\ntype MutationDetection = (editor: Editor, mutationData: MutationData) => boolean\n\nexport function gatherMutationData(\n  editor: Editor,\n  mutations: MutationRecord[]\n): MutationData {\n  const addedNodes: DOMNode[] = []\n  const removedNodes: DOMNode[] = []\n  const insertedText: TextInsertion[] = []\n  const characterDataMutations: MutationRecord[] = []\n\n  mutations.forEach(mutation => {\n    switch (mutation.type) {\n      case 'childList': {\n        if (mutation.addedNodes.length) {\n          mutation.addedNodes.forEach(addedNode => {\n            addedNodes.push(addedNode)\n          })\n        }\n\n        mutation.removedNodes.forEach(removedNode => {\n          removedNodes.push(removedNode)\n        })\n\n        break\n      }\n      case 'characterData': {\n        characterDataMutations.push(mutation)\n\n        // Changes to text nodes should consider the parent element\n        const { parentNode } = mutation.target\n\n        if (!parentNode) {\n          return\n        }\n\n        const textInsertion = getTextInsertion(editor, parentNode)\n\n        if (!textInsertion) {\n          return\n        }\n\n        // If we've already detected a diff at that path, we can return early\n        if (\n          insertedText.some(({ path }) => Path.equals(path, textInsertion.path))\n        ) {\n          return\n        }\n\n        // Add the text diff to the array of detected text insertions that need to be reconciled\n        insertedText.push(textInsertion)\n      }\n    }\n  })\n\n  return { addedNodes, removedNodes, insertedText, characterDataMutations }\n}\n\n/**\n * In general, when a line break occurs, there will be more `addedNodes` than `removedNodes`.\n *\n * This isn't always the case however. In some cases, there will be more `removedNodes` than\n * `addedNodes`.\n *\n * To account for these edge cases, the most reliable strategy to detect line break mutations\n * is to check whether a new block was inserted of the same type as the current block.\n */\nexport const isLineBreak: MutationDetection = (editor, { addedNodes }) => {\n  const { selection } = editor\n  const parentNode = selection\n    ? Node.parent(editor, selection.anchor.path)\n    : null\n  const parentDOMNode = parentNode\n    ? ReactEditor.toDOMNode(editor, parentNode)\n    : null\n\n  if (!parentDOMNode) {\n    return false\n  }\n\n  return addedNodes.some(\n    addedNode =>\n      addedNode instanceof HTMLElement &&\n      addedNode.tagName === parentDOMNode?.tagName\n  )\n}\n\n/**\n * So long as we check for line break mutations before deletion mutations,\n * we can safely assume that a set of mutations was a deletion if there are\n * removed nodes.\n */\nexport const isDeletion: MutationDetection = (_, { removedNodes }) => {\n  return removedNodes.length > 0\n}\n\n/**\n * If the selection was expanded and there are removed nodes,\n * the contents of the selection need to be replaced with the diff\n */\nexport const isReplaceExpandedSelection: MutationDetection = (\n  { selection },\n  { removedNodes }\n) => {\n  return selection\n    ? Range.isExpanded(selection) && removedNodes.length > 0\n    : false\n}\n\n/**\n * Plain text insertion\n */\nexport const isTextInsertion: MutationDetection = (_, { insertedText }) => {\n  return insertedText.length > 0\n}\n\n/**\n * Edge case. Detect mutations that remove leaf nodes and also update character data\n */\nexport const isRemoveLeafNodes: MutationDetection = (\n  _,\n  { addedNodes, characterDataMutations, removedNodes }\n) => {\n  return (\n    removedNodes.length > 0 &&\n    addedNodes.length === 0 &&\n    characterDataMutations.length > 0\n  )\n}\n","import { RefObject, useCallback, useRef, useState } from 'react'\n\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nimport { AndroidInputManager } from './android-input-manager'\nimport { useMutationObserver } from './use-mutation-observer'\nimport { useTrackUserInput } from './use-track-user-input'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport function useAndroidInputManager(node: RefObject<HTMLElement>) {\n  const editor = useSlateStatic()\n  const [inputManager] = useState(() => new AndroidInputManager(editor))\n  const { receivedUserInput, onUserInput } = useTrackUserInput()\n  const timeoutId = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const isReconciling = useRef(false)\n  const flush = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    isReconciling.current = true\n    inputManager.flush(mutations)\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current)\n    }\n\n    timeoutId.current = setTimeout(() => {\n      isReconciling.current = false\n      timeoutId.current = null\n    }, 250)\n  }, [])\n\n  useMutationObserver(node, flush, MUTATION_OBSERVER_CONFIG)\n\n  return {\n    isReconciling,\n    onUserInput,\n  }\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nimport { ReactEditor } from '../..'\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameRef = useRef<number | null>(null)\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current === false) {\n      const window = ReactEditor.getWindow(editor)\n\n      receivedUserInput.current = true\n\n      if (animationFrameRef.current) {\n        window.cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      animationFrameRef.current = window.requestAnimationFrame(() => {\n        receivedUserInput.current = false\n        animationFrameRef.current = null\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    // Reset user input tracking on every render\n    if (receivedUserInput.current) {\n      receivedUserInput.current = false\n    }\n  })\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Disconnect mutation observer during render phase\n    mutationObserver.disconnect()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    // Attach mutation observer after render phase has finished\n    mutationObserver.observe(node.current, options)\n\n    // Clean up after effect\n    return mutationObserver.disconnect.bind(mutationObserver)\n  })\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React, { useMemo, useState, useCallback, useEffect } from 'react'\nimport { Editor, Node, Element, Descendant } from 'slate'\nimport invariant from 'tiny-invariant'\n\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext } from '../hooks/use-slate'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const [key, setKey] = useState(0)\n  const context: [ReactEditor] = useMemo(() => {\n    invariant(\n      Node.isNodeList(value),\n      `[Slate] value is invalid! Expected a list of elements but got: ${JSON.stringify(\n        value\n      )}`\n    )\n    invariant(\n      Editor.isEditor(editor),\n      `[Slate] editor is invalid! you passed: ${JSON.stringify(editor)}`\n    )\n\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  }, [key, value, ...Object.values(rest)])\n\n  const onContextChange = useCallback(() => {\n    onChange(editor.children)\n    setKey(key + 1)\n  }, [key, onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    document.addEventListener('focus', fn, true)\n    return () => document.removeEventListener('focus', fn, true)\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    document.addEventListener('blur', fn, true)\n    return () => document.removeEventListener('blur', fn, true)\n  }, [])\n\n  return (\n    <SlateContext.Provider value={context}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={isFocused}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateContext.Provider>\n  )\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '..'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport { EDITOR_TO_ON_CHANGE, NODE_TO_KEY } from '../utils/weak-maps'\nimport { isDOMText, getPlainText } from '../utils/dom'\nimport { findCurrentLineRange } from '../utils/lines'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward } = e\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      const parentBlockEntry = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n        at: editor.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          editor,\n          parentBlockPath,\n          editor.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(editor, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node': {\n        for (const [node, path] of Editor.levels(e, { at: op.path })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node':\n      case 'merge_node':\n      case 'split_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.parent(op.path),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'move_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.common(Path.parent(op.path), Path.parent(op.newPath)),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = document.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = document.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    document.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    document.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    const fragment = data.getData('application/x-slate-fragment')\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return\n    }\n\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n    }\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n","// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = (window as unknown) as Window & {\n    visualViewport: visualViewport\n  }\n\n  const {\n    scrollMode,\n    block,\n    inline,\n    boundary,\n    skipOverflowHiddenElements,\n  } = options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = cursor.parentElement\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const {\n      height,\n      width,\n      top,\n      right,\n      bottom,\n      left,\n    } = frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll,\n          frame.scrollHeight - height + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll,\n          frame.scrollWidth - width + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Descendant, Editor, Element, Node, Range, Transforms } from 'slate'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport { DefaultPlaceholder, ReactEditor } from '../..'\nimport { ReadOnlyContext } from '../../hooks/use-read-only'\nimport { useSlate } from '../../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../../hooks/use-decorate'\nimport {\n  DOMElement,\n  isDOMElement,\n  isDOMNode,\n  getDefaultView,\n  isPlainTextOnlyPaste,\n} from '../../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_RESTORE_DOM,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../../utils/weak-maps'\nimport { EditableProps } from '../editable'\nimport useChildren from '../../hooks/use-children'\nimport {\n  defaultDecorate,\n  hasEditableTarget,\n  isEventHandled,\n  isDOMEventHandled,\n  isTargetInsideVoid,\n} from '../editable'\n\nimport { useAndroidInputManager } from './use-android-input-manager'\n\n/**\n * Editable.\n */\n\nexport const AndroidEditable = (props: EditableProps): JSX.Element => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  const ref = useRef<HTMLDivElement>(null)\n  const inputManager = useAndroidInputManager(ref)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  const [contentKey, setContentKey] = useState(0)\n  const onRestoreDOM = useCallback(() => {\n    setContentKey(prev => prev + 1)\n  }, [contentKey])\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n      EDITOR_TO_RESTORE_DOM.set(editor, onRestoreDOM)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n      EDITOR_TO_RESTORE_DOM.delete(editor)\n    }\n\n    try {\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = root.getSelection()\n\n      if (!domSelection || !ReactEditor.isFocused(editor)) {\n        return\n      }\n\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (hasDomSelection && hasDomSelectionInEditor && selection) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n        })\n        if (slateRange && Range.equals(slateRange, selection)) {\n          return\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      const el = ReactEditor.toDOMNode(editor, editor)\n      state.isUpdatingSelection = true\n\n      const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        const leafEl = newDomRange.startContainer.parentElement!\n        leafEl.getBoundingClientRect = newDomRange.getBoundingClientRect.bind(\n          newDomRange\n        )\n        scrollIntoView(leafEl, {\n          scrollMode: 'if-needed',\n          boundary: el,\n        })\n        // @ts-ignore\n        delete leafEl.getBoundingClientRect\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n    } catch {\n      // Failed to update selection, likely due to reconciliation error\n      state.isUpdatingSelection = false\n    }\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        inputManager.onUserInput()\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  useIsomorphicLayoutEffect(() => {\n    const node = ref.current\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    node?.addEventListener('beforeinput', onDOMBeforeInput)\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    return () => node?.removeEventListener('beforeinput', onDOMBeforeInput)\n  }, [contentKey, propsOnDOMBeforeInput])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      try {\n        if (\n          !readOnly &&\n          !state.isUpdatingSelection &&\n          !inputManager.isReconciling.current\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            hasEditableTarget(editor, anchorNode) ||\n            isTargetInsideVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            hasEditableTarget(editor, focusNode) ||\n            isTargetInsideVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n            })\n            Transforms.select(editor, range)\n          } else {\n            Transforms.deselect(editor)\n          }\n        }\n      } catch {\n        // Failed to update selection, likely due to reconciliation error\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        onDOMSelectionChange\n      )\n    }\n  })\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === ''\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          key={contentKey}\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          spellCheck={attributes.spellCheck}\n          autoCorrect={attributes.autoCorrect}\n          autoCapitalize={attributes.autoCapitalize}\n          data-slate-editor\n          data-slate-node=\"value\"\n          contentEditable={readOnly ? undefined : true}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData)\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData)\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              // This unfortunately needs to be handled with paste events instead.\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste) &&\n                !readOnly\n              ) {\n                event.preventDefault()\n                ReactEditor.insertData(editor, event.clipboardData)\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          {useChildren({\n            decorations,\n            node: editor,\n            renderElement,\n            renderPlaceholder,\n            renderLeaf,\n            selection: editor.selection,\n          })}\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;",null,"var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(isTargetAttached ? compute(target, options) : []);\n  }\n\n  if (!isTargetAttached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;","'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"sourceRoot":""}