{"version":3,"sources":["../../../../src/ui/ImageUpload/index.tsx","../../../src/Controls/ImageControls.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["ImageUpload","lazyLoad","ImageControls","props","t","useUiTranslator","React","createElement","Fragment","style","display","imageUpload","translations","imageUploaded","image","onChange","src","url","Typography","variant","margin","or","TextField","placeholder","srcPlaceholder","label","haveUrl","imageUrl","name","value","_a","data","e","target","hrefPlaceholder","hrefLabel","width","_b","href","FormControlLabel","control","Checkbox","checked","_c","openInNewWindow","openNewWindow","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary"],"mappings":"kLAIaA,EAAcC,aAAS,WAAM,0C,gBC6E3BC,UAzEyB,SAACC,G,UAC/BC,EAAMC,cAAiBD,EAC/B,OACEE,IAAAC,cAAAD,IAAAE,SAAA,KAEEF,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,SACpBP,EAAMQ,aACLL,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACP,EAAW,CACVY,aAAcT,EAAMS,aACpBD,YAAaR,EAAMQ,YACnBE,cAAe,SAACC,GACd,OAAAX,EAAMY,SAAS,CACbC,IAAKF,EAAMG,SAIjBX,IAAAC,cAACW,IAAU,CAACC,QAAQ,QAAQV,MAAO,CAAEW,OAAQ,qBAC1ChB,EAAED,EAAMS,aAAaS,MAI5Bf,IAAAC,cAACe,IAAS,CACRC,YAAanB,EAAED,EAAMS,aAAaY,gBAClCC,MAAOrB,EACLD,EAAMQ,YACFR,EAAMS,aAAac,QACnBvB,EAAMS,aAAae,UAEzBC,KAAK,MAELC,MAAqB,QAAdC,EAAA3B,EAAM4B,KAAKf,WAAG,IAAAc,IAAI,GACzBf,SAAU,SAACiB,GACT,OAAA7B,EAAMY,SAAS,CACbC,IAAKgB,EAAEC,OAAOJ,YAMtBvB,IAAAC,cAAA,WAGAD,IAAAC,cAACe,IAAS,CACRC,YAAanB,EAAED,EAAMS,aAAasB,iBAClCT,MAAOrB,EAAED,EAAMS,aAAauB,WAC5BP,KAAK,OACLnB,MAAO,CAAE2B,MAAO,SAChBP,MAAsB,QAAfQ,EAAAlC,EAAM4B,KAAKO,YAAI,IAAAD,IAAI,GAC1BtB,SAAU,SAACiB,GACT,OAAA7B,EAAMY,SAAS,CACbuB,KAAMN,EAAEC,OAAOJ,WAKrBvB,IAAAC,cAACgC,IAAgB,CACfC,QACElC,IAAAC,cAACkC,IAAQ,CACPC,QAAmC,QAA1BC,EAAAxC,EAAM4B,KAAKa,uBAAe,IAAAD,KACnC5B,SAAU,SAACiB,GACT,OAAA7B,EAAMY,SAAS,CACb6B,gBAAiBZ,EAAEC,OAAOS,aAKlCjB,MAAOrB,EAAED,EAAMS,aAAaiC,oB,0FCrErBC,cAA4BxC,gBAAoB,OAAQ,CACrEyC,EAAG,+FACD,wBCFWD,cAA4BxC,gBAAoB,OAAQ,CACrEyC,EAAG,wIACD,Y,QCFWD,cAA4BxC,gBAAoB,OAAQ,CACrEyC,EAAG,kGACD,yB,gBCwDAC,EAAkC1C,gBAAoB2C,EAAc,MACpEC,EAA2B5C,gBAAoB6C,EAA0B,MACzEC,EAAwC9C,gBAAoB+C,EAA2B,MACvFZ,EAAwBnC,cAAiB,SAAkBH,EAAOmD,GACpE,IAAIC,EAAqBpD,EAAMqD,YAC3BA,OAAqC,IAAvBD,EAAgCP,EAAqBO,EACnEE,EAAUtD,EAAMsD,QAChBC,EAAevD,EAAMwD,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAczD,EAAM0D,KACpBC,OAA2B,IAAhBF,EAAyBV,EAAcU,EAClDG,EAAuB5D,EAAM6D,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAwB9D,EAAM+D,kBAC9BC,OAAkD,IAA1BF,EAAmCb,EAA2Ba,EACtFG,EAAajE,EAAMiE,WACnBC,EAAclE,EAAMmE,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAQC,YAAyBrE,EAAO,CAAC,cAAe,UAAW,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,SAExI0D,EAAOG,EAAgBG,EAAwBL,EAC/CI,EAAoBF,EAAgBG,EAAwBX,EAChE,OAAoBlD,gBAAoBmE,IAAYC,YAAS,CAC3DC,KAAM,WACNlB,QAAS,CACPmB,KAAMC,YAAKpB,EAAQmB,KAAMnB,EAAQ,QAAQqB,OAAOC,YAAWpB,KAAUK,GAAiBP,EAAQO,eAC9FtB,QAASe,EAAQf,QACjBsC,SAAUvB,EAAQuB,UAEpBrB,MAAOA,EACPS,WAAYM,YAAS,CACnB,qBAAsBV,GACrBI,GACHP,KAAmBvD,eAAmBuD,EAAM,CAC1CoB,cAAkCC,IAAxBrB,EAAK1D,MAAM8E,UAAmC,UAATX,EAAmBA,EAAOT,EAAK1D,MAAM8E,WAEtFzB,YAA0BlD,eAAmB4D,EAAmB,CAC9De,cAA+CC,IAArChB,EAAkB/D,MAAM8E,UAAmC,UAATX,EAAmBA,EAAOJ,EAAkB/D,MAAM8E,WAEhH3B,IAAKA,GACJiB,OAiGUY,iBA5LK,SAAgBC,GAClC,MAAO,CAELR,KAAM,CACJjB,MAAOyB,EAAMC,QAAQC,KAAKC,WAI5B7C,QAAS,GAGTsC,SAAU,GAGVhB,cAAe,GAGfwB,aAAc,CACZ,YAAa,CACX7B,MAAOyB,EAAMC,QAAQI,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQI,QAAQC,KAAMN,EAAMC,QAAQQ,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZhC,MAAOyB,EAAMC,QAAQQ,OAAOb,WAKhCe,eAAgB,CACd,YAAa,CACXpC,MAAOyB,EAAMC,QAAQE,UAAUG,KAC/B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQE,UAAUG,KAAMN,EAAMC,QAAQQ,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZhC,MAAOyB,EAAMC,QAAQQ,OAAOb,cA8IF,CAChCpD,KAAM,eADOuD,CAEZ1C","file":"static/js/44.b4f12e91.chunk.js","sourcesContent":[null,null,"import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}